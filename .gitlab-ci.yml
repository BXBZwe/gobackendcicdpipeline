# Stages definition
stages:
  - test
  - build
  - deployment

# Jobs
unit-test:
  image: golang:1.20-alpine
  stage: test
  script:
    - go test ./...

sast-check:
  image: golang:1.20-alpine
  stage: test
  before_script:
    - go install github.com/securego/gosec/v2/cmd/gosec@latest
  script:
    - gosec ./...

build-merge:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  only:
    - main
  stage: build
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build -t registry.gitlab.com/BXBZwe/gocicd:latest .
    - docker push registry.gitlab.com/BXBZwe/gocicd:latest

build:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  only:
    - tags
  stage: build
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - VERSION=$(echo "$CI_COMMIT_REF_NAME" | sed 's/^v//')
  script:
    - docker build -t registry.gitlab.com/BXBZwe/gocicd:$VERSION .
    - docker push registry.gitlab.com/BXBZwe/gocicd:$VERSION

update_docker_compose:
  extends: .deploy_template
  script:
    - sed -i "s/^TAG=.*$/TAG=$VERSION/" env-production
    - scp env-production $SERVER_USER@$SERVER_HOST:/$SERVER_USER/production/.env
    - scp -r $CI_PROJECT_DIR/deployment/production/ $SERVER_USER@$SERVER_HOST:/$SERVER_USER/

deploy_api:
  extends: .deploy_template
  stage: deployment
  script:
    - ssh $SERVER_USER@$SERVER_HOST "cd production && docker compose up -d"