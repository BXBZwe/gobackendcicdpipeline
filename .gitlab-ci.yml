stages:
  - lint
  - test
  - build
  - deployment

variables:
  GO_PROJECT_PATH: $CI_PROJECT_DIR

before_script:
  - export GO111MODULE=on
  - cd $GO_PROJECT_PATH

lint:
  stage: lint
  image: golang:1.18
  script:
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.49.0
    - golangci-lint run ./...

test:
  stage: test
  image: golang:1.21  
  script:
    - go test ./handler/...

build:
  image: docker:19.03.12  # Use a Docker image
  services:
    - docker:19.03.12-dind  # Use Docker-in-Docker service
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker build -t registry.gitlab.com/bxbzwe/golangcicdpipeline .
    - docker push registry.gitlab.com/bxbzwe/golangcicdpipeline


deploy_api:
  stage: deployment
  before_script:
    - apt-get update -y && apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./deployment/docker-compose.yml $SERVER_USER@$SERVER_HOST:/home/zweminmaw2003/gocicdpipeline/docker-compose.yml
    - ssh $SERVER_USER@$SERVER_HOST "docker-compose -f /home/zweminmaw2003/gocicdpipeline/docker-compose.yml pull && docker-compose -f /home/zweminmaw2003/gocicdpipeline/docker-compose.yml up -d"
  only:
    - main
  when: manual




